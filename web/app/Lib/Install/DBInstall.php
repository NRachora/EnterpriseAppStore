<?php

App::uses('ConnectionManager', 'Model');

class DBInstall {
	
	public static function createDatabaseConfigurationFile($dbConf) {
		$fileData = "<?php
/**
 * This is core configuration file.
 *
 * Use it to configure core behaviour of CakePHP.
 *
 * PHP 5
 *
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @package       app.Config
 * @since         CakePHP(tm) v 0.2.9
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 *
 * Database configuration class.
 * You can specify multiple configurations for production, development and testing.
 *
 * datasource => The name of a supported datasource; valid options are as follows:
 *		Database/Mysql 		- MySQL 4 & 5,
 *		Database/Sqlite		- SQLite (PHP5 only),
 *		Database/Postgres	- PostgreSQL 7 and higher,
 *		Database/Sqlserver	- Microsoft SQL Server 2005 and higher
 *
 * You can add custom database datasources (or override existing datasources) by adding the
 * appropriate file to app/Model/Datasource/Database. Datasources should be named 'MyDatasource.php',
 *
 *
 * persistent => true / false
 * Determines whether or not the database should use a persistent connection
 *
 * host =>
 * the host you connect to the database. To add a socket or port number, use 'port' => #
 *
 * prefix =>
 * Uses the given prefix for all the tables in this database. This setting can be overridden
 * on a per-table basis with the Model::\$tablePrefix property.
 *
 * schema =>
 * For Postgres/Sqlserver specifies which schema you would like to use the tables in. Postgres defaults to 'public'. For Sqlserver, it defaults to empty and use
 * the connected user's default schema (typically 'dbo').
 *
 * encoding =>
 * For MySQL, Postgres specifies the character encoding to use when connecting to the
 * database. Uses database default not specified.
 *
 * unix_socket =>
 * For MySQL to connect via socket specify the `unix_socket` parameter instead of `host` and `port`
 *
 * settings =>
 * Array of key/value pairs, on connection it executes SET statements for each pair
 * For MySQL : http://dev.mysql.com/doc/refman/5.6/en/set-statement.html
 * For Postgres : http://www.postgresql.org/docs/9.2/static/sql-set.html
 * For Sql Server : http://msdn.microsoft.com/en-us/library/ms190356.aspx
 */
 
 
// Generated by Enterprise AppStore from Ridiculous Innovations, have a lovely day!

class DATABASE_CONFIG {

	public \$default = array(
		'datasource' => 'Database/Mysql',
		'persistent' => false,
		'host' => '".$dbConf['host']."',
		'login' => '".$dbConf['login']."',
		'password' => '".$dbConf['password']."',
		'database' => '".$dbConf['database']."',
	);

	public \$test = array(
		'datasource' => 'Database/Mysql',
		'persistent' => false,
		'host' => '".$dbConf['host']."',
		'login' => '".$dbConf['login']."',
		'password' => '".$dbConf['password']."',
		'database' => '".$dbConf['database']."',
		'prefix' => 'testing_',
		//'encoding' => 'utf8',
	);
}";
		$file = new File(APP.'Config'.DS.'database.php', true);
		if ($file->writable()) $file->write($fileData);
	}
	
	protected function executeQuery($query) {
		$db = ConnectionManager::getDataSource('default');
		$db->rawQuery($query);
		$this->queryCount++;
	}
	
	public $prefix = '';
	public $queryCount = 0;
	
	public function install($prefix=null) {
		$this->prefix = $prefix;
		$arr = $this->tables();
		foreach ($arr as $name=>$sql) {
			if (empty($this->prefix)) Error::add(__('Installing table').': '.$name, Error::TypeInfo);
			$this->executeQuery($sql['table']);
			if (!empty($sql['data']) && is_array($sql['data'])) foreach ($sql['data'] as $query) {
				$this->executeQuery($query);
			}
		}
		if (empty($this->prefix)) {
			$this->install('testing_');
			Error::add(__('Number of executed queries').': '.$this->queryCount, Error::TypeInfo);
		}
		return true;
	}
	
	protected function tables() {
		return array(
			// Applications
			'applications' => array(
				'table' => "CREATE TABLE `".$this->prefix."applications` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `identifier` varchar(150) NOT NULL,
  `url` text NOT NULL,
  `platform` tinyint(2) unsigned NOT NULL,
  `version` varchar(15) NOT NULL,
  `size` bigint(20) unsigned NOT NULL DEFAULT '0',
  `sort` int(5) unsigned NOT NULL DEFAULT '1000',
  `config` text NOT NULL,
  `location` tinyint(2) unsigned NOT NULL DEFAULT '0',
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `name` (`name`,`identifier`,`platform`,`sort`),
  KEY `version` (`version`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8;",
				'data' => array(),
			),
			
			// Applications_attachments
			'applications_attachments' => array(
				'table' => "CREATE TABLE `".$this->prefix."applications_attachments` (
  `application_id` bigint(20) unsigned NOT NULL,
  `attachment_id` bigint(20) unsigned NOT NULL,
  KEY `application_id` (`application_id`,`attachment_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;",
				'data' => array(),
			),
			
			// Application_groups
			'applications_groups' => array(
				'table' => "CREATE TABLE `".$this->prefix."applications_groups` (
  `application_id` bigint(20) unsigned NOT NULL,
  `group_id` int(11) unsigned NOT NULL,
  KEY `application_id` (`application_id`,`group_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;",
				'data' => array(),
			),
			
			// Attachments
			'attachments' => array(
				'table' => "CREATE TABLE `".$this->prefix."attachments` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `application_id` bigint(20) unsigned DEFAULT NULL,
  `application_identifier` varchar(150) NOT NULL,
  `application_platform` tinyint(2) unsigned DEFAULT NULL,
  `name` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `filetype_id` int(11) unsigned NOT NULL,
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `application_id` (`application_id`,`name`,`created`,`modified`),
  KEY `application_identifier` (`application_identifier`),
  KEY `application_platform` (`application_platform`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8;",
				'data' => array(),
			),
			
			// Categories
			'categories' => array(
				'table' => "CREATE TABLE `".$this->prefix."categories` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `description` text NOT NULL,
  `icon` varchar(30) NOT NULL,
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `name` (`name`),
  KEY `created` (`created`,`modified`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8;",
				'data' => array(
					"INSERT INTO `".$this->prefix."categories` (`name`, `description`, `icon`, `created`, `modified`) VALUES('Travel', '', 'icon-plane', NOW(), NOW());",
					"INSERT INTO `".$this->prefix."categories` (`name`, `description`, `icon`, `created`, `modified`) VALUES('Health', '', 'icon-ambulance', NOW(), NOW());",
					"INSERT INTO `".$this->prefix."categories` (`name`, `description`, `icon`, `created`, `modified`) VALUES('Photography', '', 'icon-camera', NOW(), NOW());",
					"INSERT INTO `".$this->prefix."categories` (`name`, `description`, `icon`, `created`, `modified`) VALUES('Games', '', 'icon-fighter-jet', NOW(), NOW());",
					"INSERT INTO `".$this->prefix."categories` (`name`, `description`, `icon`, `created`, `modified`) VALUES('Legal', '', 'icon-legal', NOW(), NOW());",
					"INSERT INTO `".$this->prefix."categories` (`name`, `description`, `icon`, `created`, `modified`) VALUES('Utilities', '', 'icon-lightbulb', NOW(), NOW());",
				),
			),
			
			// Signings
			'signings' => array(
				'table' => "CREATE TABLE `".$this->prefix."signings` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  `certificate` varchar(250) NOT NULL,
  `password` varchar(150) NOT NULL,
  `provisioning` varchar(250) NOT NULL,
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `created` (`created`,`modified`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8;",
				'data' => array(),
			),
			
			// Downloads
			'downloads' => array(
				'table' => "CREATE TABLE `".$this->prefix."downloads` (
  `application_id` bigint(20) unsigned NOT NULL,
  `created` datetime NOT NULL,
  KEY `application_id` (`application_id`,`created`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;",
				'data' => array(),
			),
			
			//Filetypes (mime)
			'filetypes' => array(
				'table' => "CREATE TABLE `".$this->prefix."filetypes` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `mime` varchar(25) NOT NULL,
  `allowed` tinyint(1) unsigned NOT NULL DEFAULT '1',
  `icon` varchar(50) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `mime` (`mime`,`allowed`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8;",
				'data' => array(),
			),
			
			// Groups
			'groups' => array(
				'table' => "CREATE TABLE `".$this->prefix."groups` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `description` text NOT NULL,
  `all_versions_available` tinyint(1) unsigned NOT NULL DEFAULT '1',
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `name` (`name`,`created`,`modified`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8;",
				'data' => array(),
			),
			
			// History
			'history' => array(
				'table' => "CREATE TABLE `".$this->prefix."history` (
  `application_id` bigint(20) unsigned NOT NULL,
  `action` varchar(3) NOT NULL,
  `created` datetime NOT NULL,
  `user_id` int(11) unsigned NOT NULL,
  KEY `application_id` (`application_id`,`action`,`created`,`user_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;",
				'data' => array(),
			),
			
			// Ideas
			'ideas' => array(
				'table' => "CREATE TABLE `".$this->prefix."ideas` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `fullname` varchar(150) NOT NULL,
  `email` varchar(80) NOT NULL,
  `area` tinyint(1) unsigned NOT NULL DEFAULT '0',
  `message` text NOT NULL,
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`,`area`),
  KEY `created` (`created`,`modified`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8;",
				'data' => array(),
			),
			
			// Users
			'users' => array(
				'table' => "CREATE TABLE `".$this->prefix."users` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(40) NOT NULL,
  `email` varchar(80) NOT NULL,
  `password` varchar(50) NOT NULL,
  `role` varchar(20) NOT NULL,
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  `firstname` varchar(80) NOT NULL,
  `lastname` varchar(80) NOT NULL,
  `company` varchar(80) NOT NULL,
  `password_token` varchar(40) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `nickname` (`username`,`email`,`password`),
  KEY `role` (`role`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8;",
				'data' => array(
					"INSERT INTO `".$this->prefix."users` (`username`, `email`, `password`, `role`, `created`, `modified`, `firstname`, `lastname`, `company`, `password_token`) VALUES('admin', 'admin@example.com', '3a37e68dd29ea23ff7fc9cf009da7bef9a13a5f4', 'owner', NOW(), NOW(), 'Super', 'Admin', 'Company', '');",
				),
			),
			
			// Groups_users
			'groups_users' => array(
				'table' => "CREATE TABLE `".$this->prefix."users_groups` (
  `user_id` int(11) unsigned NOT NULL,
  `group_id` int(11) unsigned NOT NULL,
  KEY `user_id` (`user_id`,`group_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;",
				'data' => array(),
			),
			
			/*
			// Xxxxxx
			'xxxx' => array(
				'table' => "',
				'data' => array(),
			),
			*/
		);
	}
	
}